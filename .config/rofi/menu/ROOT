#!/bin/bash
FOREGROUND=$(xrdb -query | grep 'color6:'| awk 'NR==1{print $NF}')
# BACKGROUND=$(xrdb -query | grep 'color0:'| awk 'NR==1{print $NF}')
ROFI_OPTIONS=(-theme $HOME/.config/rofi/rofi_bar -theme-str "*{accent: ${FOREGROUND:-#FFFFFF}; bckgrd: ${BACKGROUND:-#000000};}")

apps=runapps
sodo=sudorun
exce=command
manp=manpage
sysd=systemd
path=syspath
font=sysfonts
conf=configs

another=$(echo "$apps
$sodo
$exce
$sysd
$manp
$path
$font
$conf" | rofi "${ROFI_OPTIONS[@]}" -dmenu -i -p "search: ")

if [ "$another" == "$apps" ] ; then
	rofi "${ROFI_OPTIONS[@]}" -modi 'run,drun' -show drun -columns 4

elif [ "$another" == "$conf" ] ; then
    confile=$(find /home/bresilla/dots/ -type f -not -path "/home/bresilla/dots/.other/*" -not -path "/home/bresilla/dots/.config/Code*" -not -path "/home/bresilla/dots/.config/nvim/plugged/*" | rofi "${ROFI_OPTIONS[@]}" -threads 0 -dmenu -i -p 'locate:')
    [[ $confile != "" ]] && kitty --class=til nvim $confile

elif [ "$another" == "$path" ] ; then
    echo $PATH | tr ':' '\n' | rofi "${ROFI_OPTIONS[@]}" -threads 0 -dmenu -i -p 'PATH:'

elif [ "$another" == "$font" ] ; then
    fc-list | rofi "${ROFI_OPTIONS[@]}" -threads 0 -dmenu -i -p 'PATH:'

elif [ "$another" == "$manp" ] ; then
    kitty -e man $(apropos --long "$1" | rofi "${ROFI_OPTIONS[@]}" -threads 0 -dmenu -i -p 'MAN:' | awk '{print $2, $1}' | tr -d '()')

elif [ "$another" == "$sysd" ] ; then
    exec /home/bresilla/.config/rofi/menu/systemd

elif [ "$another" == "$sodo" ] ; then
	SUDO_ASKPASS=/home/bresilla/.sbin/askpass rofi "${ROFI_OPTIONS[@]}" -modi 'run,drun' -show drun -columns 4 -theme-str "*{accent: #e53714;}" -run-command 'sudo -A {cmd}'

elif [ "$another" == "$exce" ] ; then
	exec urxvt -hold -e sh -c $(rofi -theme $HOME/.config/rofi/rofi_bar -m 0 -width 1500 -fuzzy  -lines 0 -show run -theme-str "*{accent: $FOREGROUND;}")

elif [ -z "$another" ] ; then
	echo "variable empty" && exit 1

else
  exec nohup $another > /dev/null 2>&1 &
fi
