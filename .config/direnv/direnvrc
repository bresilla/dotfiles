#!/bin/sh

export INDIRENV=true;

use_ros(){
    _CATKIN_SETUP_DIR=/opt/ubuntu/opt/ros/install
    export PYTHONPATH=/opt/ubuntu/usr/lib/python3/dist-packages
    ROSPATH="$_CATKIN_SETUP_DIR/bin" && [[ -d "$ROSPATH" ]] && PATH="$ROSPATH:$PATH" || exit 1
    if [[ -n ${ZSH_VERSION-} ]]; then
        echo "sourcing $_CATKIN_SETUP_DIR/setup.zsh";
        source $_CATKIN_SETUP_DIR/setup.zsh;
    elif [[ -n ${BASH_VERSION-} ]]; then
        echo "sourcing $_CATKIN_SETUP_DIR/setup.bash";
        source $_CATKIN_SETUP_DIR/setup.bash;
    else
        echo "sourcing $_CATKIN_SETUP_DIR/setup.sh";
        source $_CATKIN_SETUP_DIR/setup.sh;
    fi
}

use_docker(){
    if [[ -n $(awk -F/ '$2 == "docker"' /proc/self/cgroup) ]]; then
        echo "ALREADY INSIDE DOCKER";
    else
        docker run -v $PWD/:/$(basename $PWD)/ -w /$( basename $PWD)/ --rm -it $@;
    fi
}

use_nix() {
    if [[ -f .shell.nix ]]; then
        NIXFILE=$PWD/.shell.nix
    fi
    direnv_load nix-shell --show-trace $NIXFILE --run "$(join_args "$direnv" dump)"
    if [[ -f .shell.nix ]]; then
        watch_file $NIXFILE
    else
        watch_file default.nix shell.nix
    fi
}

nix-profile(){
    local profile=$PWD/.direnv/nix-profile
    mkdir -p .direnv

    rm -f "$profile"
    nix-build --out-link "$profile" profile.nix
    watch_file profile.nix
    load_prefix "$profile"
}


layout_conda() {
    local BLUE='\033[0;34m';local GREEN='\033[0;32m';local RED='\033[0;31m';local NC='\033[0m'
    CONDAPATH="/opt/conda/bin" && [[ -d "$CONDAPATH" ]] && PATH="$CONDAPATH:$PATH" || exit 1

    if [ -n "$1" ]; then
        local env_name="$1"
        source activate ${env_name}
        conda_env=$(conda info | sed -n '3p' | cut -d: -f2)
        if [ $? == 1 ]; then
            printf "\n${RED}no environment specified${NC}\nusing environment: ${BLUE}${conda_env}${NC}\n\n";
        else
            printf "\n${GREEN}environment specified${NC}\nusing environment: ${BLUE}${conda_env}${NC}\n\n";
        fi
    elif [ -f environment.yml ]; then
        local env_name =$(grep name: environment.yml | sed -e 's/name: //' | cut -d "'" -f 2 | cut -d '"' -f 2)
        source activate ${env_name}
        PATH="/opt/conda/envs/${env_name}/bin:$PATH"
        printf "\n${GREEN}environment specified${NC}\nusing environment: ${BLUE}${conda_env}${NC}\n\n";
    else
        CONDALOC="$PWD/.direnv/bin"
        conda_env=$(conda info | sed -n '3p' | cut -d: -f2)
        if [[ -d "$CONDALOC" ]]; then
            source activate $PWD/.direnv
            # PATH="$CONDALOC:$PATH"
            conda_env=$(conda info | sed -n '3p' | cut -d: -f2)
            printf "\n${GREEN}local folder environment${NC}\nusing environment: ${BLUE}${conda_env}${NC}\n\n";
        else
            conda create -p $PWD/.direnv python=${1:-3.7}
            source activate $PWD/.direnv
            # PATH="$CONDALOC:$PATH"
        fi
    fi;
}

layout_go() {
  export GOPATH="$PWD/vendor/"
  PATH_add "$PWD/vendor/bin"
  PATH_add bin
}

layout_rust() {
  export CARGO_HOME="$PWD/vendor/"
  export RUSTUP_HOME="$PWD/vendor/rustup"
  PATH_add "$PWD/vendor/bin"
  PATH_add bin
}

layout_nim() {
  export NIMBLE_DIR="$PWD/vendor/"
  PATH_add "$PWD/vendor/bin"
  PATH_add bin
}

local_vimrc() {
  local extravim="$(find_up .vimrc)"
  if [ -n "$extravim" ]; then
    echo "Adding extra .vimrc: ${extravim}"
    path_add EXTRA_VIM $extravim
  fi
}

export_function() {
  local name=$1
  local alias_dir=$PWD/.direnv/functions
  mkdir -p "$alias_dir"
  PATH_add "$alias_dir"
  local target="$alias_dir/$name"
  if declare -f "$name" >/dev/null; then
    echo "#!$SHELL" > "$target"
    declare -f "$name" >> "$target" 2>/dev/null
    # Notice that we add shell variables to the function trigger.
    echo "$name \$*" >> "$target"
    chmod +x "$target"
  fi
}
# EXAMPLE
# woot() {
  # echo woot
# }
# export_function woot

export_alias() {
    local name=$1
    shift
    local alias_dir=$PWD/.direnv/aliases
    local target="$alias_dir/$name"
    mkdir -p "$alias_dir"
    PATH_add "$alias_dir"
    echo "#!/usr/bin/sh" > "$target"
    echo "$@" >> "$target"
    chmod +x "$target"
}
# EXAMPLE
# export_alias piuu "ls -la"

tidyup(){
    [[ -d "$PWD/.direnv/functions" ]] && rm -r $PWD/.direnv/functions
    [[ -d "$PWD/.direnv/aliases" ]] && rm -r $PWD/.direnv/aliases
}
