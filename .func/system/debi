#!/bin/bash
# xhost +

MP=/debi

if ! [[ $(findmnt -M "$MP/sys") ]]; then doas mount --rbind /sys $MP/sys && doas mount --make-rslave $MP/sys; fi
if ! [[ $(findmnt -M "$MP/dev") ]]; then doas mount --rbind /dev $MP/dev && doas mount --make-rslave $MP/dev; fi
if ! [[ $(findmnt -M "$MP/proc") ]]; then doas mount --rbind /proc $MP/proc && doas mount --make-rslave $MP/proc; fi
if ! [[ $(findmnt -M "$MP/run") ]]; then doas mount --rbind /run $MP/run && doas mount --make-rslave $MP/run; fi
if ! [[ $(findmnt -M "/run/systemd/resolve") ]]; then doas mount --rbind /run/systemd/resolve $MP/run/systemd/resolve && doas mount --make-rslave $MP/run/systemd/resolve; fi

if ! [[ $(findmnt -M "$MP/env") ]]; then doas mount --rbind /env $MP/env && doas mount --make-rslave $MP/env; fi
if ! [[ $(findmnt -M "$MP/pkg") ]]; then doas mount --rbind /pkg $MP/pkg && doas mount --make-rslave $MP/pkg; fi
if ! [[ $(findmnt -M "$MP/doc") ]]; then doas mount --rbind /doc $MP/doc && doas mount --make-rslave $MP/doc; fi
if ! [[ $(findmnt -M "$MP/nix") ]]; then doas mount --rbind /nix $MP/nix && doas mount --make-rslave $MP/nix; fi
if ! [[ $(findmnt -M "$MP/home") ]]; then doas mount --rbind /home $MP/home && doas mount --make-rslave $MP/home; fi

# Isolate the first GPU device along with basic utilities
# doas nvidia-container-cli --load-kmods configure --ldconfig=@/sbin/ldconfig.real --no-cgroups --utility --device 0 $MP
doas nvidia-container-cli --load-kmods configure --no-cgroups --utility --device 0 $MP

doas chroot $MP /bin/bash -c "su -l bresilla"
# doas chroot --userspec 1000:1000 $MP env -i bash
# doas chroot $MP
