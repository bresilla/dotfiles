function img2svg() { convert -channel RGB -compress None $1 ppm:- | potrace -s --flat - -o $1.svg && suda rm -r $1; }
function svg2img() { convert -density 1200 $1.svg $1.png; }
function img24k() { convert $1 -resize 4096x2160 -define filter:support=2 -unsharp 3x1.7+1.9+0.065 $1_4k_SH.jpg; }
function compress_img() { convert -strip -interlace Plane -gaussian-blur 0.05 -quality 85% $1 $2; }

function tubedl(){ clipp=$(xsel --clipboard); youtube-dl -i -f best --yes-playlist --restrict-filenames -o "%(autonumber)s-%(title)s.%(ext)s" --no-part --skip-unavailable-fragments --no-overwrites ${1:-$clipp}; }
function dotshot(){ sleep ${1:-5} && scr=~/TEMP/$(date +%s).png && scrot -d 1 $scr && sxiv $scr; } #&& convert $scr -gravity North -chop 0x1080 $scr;
function dotback(){ sleep ${2:-10} && scr=~/TEMP/$(date +%s).png && scrot -d 1 $scr; xdotool key 'Escape'; sleep .2 && sxiv $scr & sleep 2 && xdotool key 'e+Up' && sleep .2 && xdotool key 'Up+Up'; sleep .2 && maim -s $scr; } #&& convert $scr -gravity North -chop 0x1080 $scr;
function flix(){ peerflix $@ --mpv; }

alias asci='asciinema'

fhistory() {
    local cols sep
    cols=$(( COLUMNS / 3 ))
    sep='{::}'
    tmpfile=$(mktemp /tmp/ffhist.XXXXX)
    cp -f ~/.mozilla/firefox/13kgbp7a.default/places.sqlite $tmpfile
    sqlite3 -separator $sep $tmpfile "select substr(title, 1, $cols), url from moz_places
    where url not like '%google%search%' order by visit_count desc, last_visit_date desc;" | awk -F $sep '{printf "%-'$cols's \x1b[36m%s\x1b[m\n", $1, $2}' | rofit | sed 's#.*\(https*://\)#\1#'
}
