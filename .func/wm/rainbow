#!/usr/bin/env bash
if [ ! -d $HOME/.cache/wal ]; then
  mkdir -p $HOME/.cache/wal;
fi

if [[ $1 == "theme" ]]; then
    [[ $(cat $HOME/.cache/wal/theme) == "light" ]] && echo dark > $HOME/.cache/wal/theme || echo light > $HOME/.cache/wal/theme
fi

if [[ $1 == "regen" ]]; then
    wallpaper=$(find /home/bresilla/sets/.wallpaper -maxdepth 1 | shuf -n 1)
    /env/cargo/bin/pigmnts -c 10 $wallpaper -q > /tmp/colorz
    feh --no-fehbg --bg-scale $wallpaper
fi

cat /tmp/colorz | /env/cargo/bin/pastel -f saturate 0.1 | /env/cargo/bin/pastel sort-by -r chroma | head -n 6 | /env/cargo/bin/pastel format hex > /tmp/rainbow

if [[ $1 == "pick" ]]; then
    ac=$(/env/cargo/bin/pastel -f pick | /env/cargo/bin/pastel format hex)
else
    ac=$(cat /tmp/rainbow | head -n 1)
fi



### === COLOR-GENERATION ===
col0=$(/env/cargo/bin/pastel -f mix $ac -f 0.09 "#000000" | /env/cargo/bin/pastel format hex)
col1=$(echo $ac | /env/cargo/bin/pastel -f saturate 0.1 | /env/cargo/bin/pastel format hex)
col7=$(/env/cargo/bin/pastel -f mix $ac -f 0.2 "#aaaaaa" | /env/cargo/bin/pastel format hex)
col8=$(/env/cargo/bin/pastel -f mix $ac -f 0.2 "#666666" | /env/cargo/bin/pastel format hex)
col15=$(/env/cargo/bin/pastel -f mix $ac -f 0.1 "#ffffff" | /env/cargo/bin/pastel format hex)
# additional color generation (mix between accent and primary colors)
factor=0.5
redish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#ff0000")
blueish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#0000ff")
greenish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#00ff00")
cyanish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#00ffff")
yellowish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#ffff00")
magentaish=$(/env/cargo/bin/pastel -f mix $ac -f $factor "#ff00ff")



### === LIGHT & DARK THEME ===
if [ $(cat $HOME/.cache/wal/theme) == "light" ] ; then
    white=#000000 
    black=#ffffff 
    back=$col15 
    fore=$col0
else
    black=#000000
    white=#ffffff
    back=$col0
    fore=$col15
fi



### === COLOR-CONCATINATION ===
#concatinating main colors (colors 0-15)
echo $back > $HOME/.cache/wal/colors
echo $col1 >> $HOME/.cache/wal/colors
cat /tmp/rainbow | tail -n 5 | /env/cargo/bin/pastel -f lighten 0.1 | /env/cargo/bin/pastel -f saturate 0.1 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
echo $col7 >> $HOME/.cache/wal/colors
echo $col8 >> $HOME/.cache/wal/colors
cat /tmp/rainbow | /env/cargo/bin/pastel -f lighten 0.3 | /env/cargo/bin/pastel -f saturate 0.3 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
echo $fore >> $HOME/.cache/wal/colors
#generating shades of each additional color (colors 16-51)
/env/cargo/bin/pastel -f gradient $back $redish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back $greenish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back $blueish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
#generating shades of each additional color (colors 52-87)
/env/cargo/bin/pastel -f gradient $back $magentaish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back $yellowish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back $cyanish $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
#generating random color (colors 88-123:124-159:160-196)
/env/cargo/bin/pastel -f distinct 108 | xargs -0 | head -n -1 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
#generating random color (colors 196-231)
/env/cargo/bin/pastel -f gradient $back '#ff0000' $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back '#00ff00' $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
/env/cargo/bin/pastel -f gradient $back '#0000ff' $fore -n 14 | xargs -0 | head -n -2 | tail -n +2 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors
#generating gradients (colors 232-255)
/env/cargo/bin/pastel -f gradient $black $back -n 3 | xargs -0 | head -n -1 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors 
/env/cargo/bin/pastel -f gradient $back $col1 $fore -n 18 | xargs -0 | head -n -1 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors 
/env/cargo/bin/pastel -f gradient $fore $white -n 3 | xargs -0 | head -n -1 | /env/cargo/bin/pastel format hex >> $HOME/.cache/wal/colors 




### === PRINTING THINGS TO FILES === ###
# COLORS.YAML (used by ALACRITY)
printf "special:\n\tbackground: \"$back\"\n\tforeground: \"$fore\"\n\tcursor: \"$col1\"\n\ncolors:\n" > $HOME/.cache/wal/colors.yml
awk '{print "\tcolor" NR-1 ": \"" $0 "\""}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.yml

# COLORS.SH (used by shells - bash,zsh,fish...)
printf "foreground=\"$fore\"\nbackground=\"$back\"\ncursor=\"$col1\"\n" > $HOME/.cache/wal/colors.sh
awk '{print "color" NR-1 "=\"" $0 "\""}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.sh

# COLORS.KITTY (used by KITTY)
printf "foreground\t$fore\nbackground\t$back\ncursor\t$col1\n\n" > $HOME/.cache/wal/colors.conf
awk '{print "color" NR-1 "\t " $0}' $HOME/.cache/wal/colors >> $HOME/.cache/wal/colors.conf

# SEQUENCES (escape codes sent to all '/dev/pts/*')
printf "]10;$fore\\]11;$back\\]12;$col1\\]13;$back\\]17;$col1\\]19;$back\\" > $HOME/.cache/wal/sequences
awk '{print "]4;" NR-1 ";" $0"\\"}' ORS='' $HOME/.cache/wal/colors >> $HOME/.cache/wal/sequences
for tt in /dev/pts/*; do re='^[0-9]+$'; [[ $(basename $tt) =~ $re ]] && /usr/bin/cat ~/.cache/wal/sequences >$tt; done &



### === UPDATE COLORS ON APPS WITH EXTERNAL SCRIPT/BINARY === ###
/home/bresilla/dots/.func/wm/colupd &
